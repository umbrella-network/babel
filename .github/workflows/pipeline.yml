# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Contracts Quality Test

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - name: Compile contracts
      env:
        RPC_URL: ${{ secrets.RPC_URL }}
        UMB_CHAIN_ADDRESS: ${{ secrets.UMB_CHAIN_ADDRESS }}
      run: |
        npm run compile
    - name: Unit tests
      env:
        RPC_URL: ${{ secrets.RPC_URL }}
        UMB_CHAIN_ADDRESS: ${{ secrets.UMB_CHAIN_ADDRESS }}
      run: |
        npm run test
    - name: Solidity Lint
      run: |
        npm run lint:sol
    - name: JS Lint
      run: |
        npm run lint:ts
    - name: Run hardhat tests
      env:
        RPC_URL: ${{ secrets.RPC_URL }}
      run: |
        npx hardhat test
    - name: Run coders examples
      run: |
        npx hardhat run scripts/coders.ts
    - name: Run converters examples
      run: |
        npx hardhat run scripts/converters.ts
    - name: Run API Client examples
      env:
        RPC_URL: ${{ secrets.RPC_URL }}
        UMB_CHAIN_ADDRESS: ${{ secrets.UMB_CHAIN_ADDRESS }}
        API_KEY: ${{ secrets.APY_KEY }}
      run: |
        npx hardhat run scripts/api-client.ts
    - name: Run proof verification example
      env:
        RPC_URL: ${{ secrets.RPC_URL }}
        UMB_CHAIN_ADDRESS: ${{ secrets.UMB_CHAIN_ADDRESS }}
        API_KEY: ${{ secrets.APY_KEY }}
      run: |
        npx hardhat run scripts/proof-verification.ts
